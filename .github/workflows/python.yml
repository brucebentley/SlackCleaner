name: python

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        node-version: [12.x, 14.x, 15.x, 15.x]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/checkout@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Run test suite
        run: |
          pipenv run test -svvv
        env:
          # Insecure SECRET_KEY temporarily
          SECRET_KEY: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

      - name: Run linter
        run: |
          pipenv run lint

      - name: Run formatting check
        run: |
          pipenv run format --check

      - name: Setup Node.js ${{ matrix.node-version }} ( for pyright )
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install Node.js dependencies
        run: yarn

      - name: Run type checking
        run: |
          yarn global add pyright
          pipenv run typecheck

      - run: yarn build --if-present
      - run: yarn test --if-present
